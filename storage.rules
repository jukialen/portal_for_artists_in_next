rules_version = '2';
service firebase.storage {
    match /b/{bucket}/o {
        function sizePhotosAnimations() {
            return request.resource.size < 5 * 1024 * 1024
            && (
            request.resource.contentType.matches('image/avif')
            || request.resource.contentType.matches('image/jpg')
            || request.resource.contentType.matches('image/jpeg')
            || request.resource.contentType.matches('image/webp')
            || request.resource.contentType.matches('image/apng')
            || request.resource.contentType.matches('image/png')
            )
        }

        function sizeVideos() {
            return request.resource.size < 16 * 1024 * 1024
            && (
            request.resource.contentType.matches('video/webp')
            || request.resource.contentType.matches('video/avif')
            || request.resource.contentType.matches('video/webm')
            || request.resource.contentType.matches('video/mp4')
            )
        }

        function sizeFiles() {
            return sizePhotosAnimations() || sizeVideos();
        }

        match /profilePhotos/{userId}/{document=**} {
            allow read: if request.auth!=null;
            allow write: if request.auth.uid == userId;
        }

        match /{userId}/{document=**} {
            allow read: if request.auth!=null;
            allow update, delete: if request.auth.uid == userId;
            allow create: if request.auth.uid == userId
                             && sizeFiles();
        }
    }

}
